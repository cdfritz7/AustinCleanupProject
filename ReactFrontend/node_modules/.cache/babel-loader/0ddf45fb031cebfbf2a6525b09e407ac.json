{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/MapBoxMapComponent.js\";\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { renderToString } from 'react-dom/server';\nimport { Card } from 'react-bootstrap'; //https://blog.mapbox.com/mapbox-gl-js-react-764da6cc074a\n//---MAPBOX API---\n//https://docs.mapbox.com/mapbox-gl-js/api/#popup.event:open\n//--fontawesome react icons--\n//https://fontawesome.com/how-to-use/on-the-web/using-with/react\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiY2Rmcml0ejciLCJhIjoiY2sydzBmenM3MGF1djNrcWR3YzRmaGQ0aCJ9.y0TZwO3PN1sYjakT02t1fQ';\n\nclass MapBoxMapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: props.lng,\n      lat: props.lat,\n      zoom: 10\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.markers = [];\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          lng = _this$state.lng,\n          lat = _this$state.lat,\n          zoom = _this$state.zoom;\n    console.log(this.props.events);\n    console.log(this.props.testprop);\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v9',\n      center: [lng, lat],\n      zoom\n    });\n    this.map = map; //changes latitude longitude state on move\n    //and calls onMove method from parent component => used to update events in\n    //parent\n\n    map.on('move', () => {\n      const _map$getCenter = map.getCenter(),\n            lng = _map$getCenter.lng,\n            lat = _map$getCenter.lat;\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n\n      if (this.props.onMove !== undefined) {\n        this.props.onMove(lat, lng);\n      }\n    }); //add navigation controls like zooming\n\n    map.addControl(new mapboxgl.NavigationControl());\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom; //remove old markers\n\n    for (var i = 0; i < this.markers.length; i++) {\n      this.markers[i].remove();\n    }\n\n    this.markers = []; //add new markers\n\n    const onclick = this.props.onClick;\n    const onmousein = this.props.onMouseIn;\n    const onmouseout = this.props.onMouseOut;\n\n    for (var i = 0; i < this.props.events.length; i++) {\n      let evnt = this.props.events[i];\n      let evnt_ref = this.props.eventRefs[i]; //create popup and card for popup\n\n      var popup_card = React.createElement(Card, {\n        style: {\n          width: \"10rem\",\n          margin: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, evnt.name), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, evnt.description)));\n      let popup = new mapboxgl.Popup().setHTML(renderToString(popup_card));\n      var el = document.createElement('div');\n      el.innerHTML = renderToString(React.createElement(FontAwesomeIcon, {\n        icon: faMapMarkerAlt,\n        size: \"3x\",\n        color: \"#00B0B0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n      el.id = 'marker';\n      let marker = new mapboxgl.Marker(el, {\n        offset: [-25, -25]\n      }).setLngLat([evnt.longitude, evnt.latitude]).setPopup(popup).addTo(this.map); //set marker event listeners\n\n      el.addEventListener('mouseenter', () => {\n        evnt_ref.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n        popup.setLngLat([evnt.longitude, evnt.latitude]).addTo(this.map);\n      });\n      el.addEventListener('mouseleave', () => {\n        popup.remove();\n      });\n      el.addEventListener('click', () => {\n        onclick({\n          showViewEventModal: true,\n          displayedEvent: evnt\n        });\n      });\n      this.markers.push(marker);\n    }\n\n    const style = {\n      position: 'relative',\n      top: 0,\n      bottom: 0,\n      width: '99%',\n      height: '87vh',\n      overflow: 'hidden'\n    };\n    return React.createElement(\"div\", {\n      style: style,\n      ref: el => this.mapContainer = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    });\n  }\n\n}\n\nMapBoxMapComponent.defaultProps = {\n  lng: 4,\n  lat: 34,\n  zoom: 10,\n  onMove: undefined,\n  events: [],\n  eventRefs: []\n};\nexport default MapBoxMapComponent;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/MapBoxMapComponent.js"],"names":["React","Component","mapboxgl","FontAwesomeIcon","faMapMarkerAlt","renderToString","Card","accessToken","MapBoxMapComponent","constructor","props","state","lng","lat","zoom","componentDidMount","bind","markers","console","log","events","testprop","map","Map","container","mapContainer","style","center","on","getCenter","setState","toFixed","getZoom","onMove","undefined","addControl","NavigationControl","render","i","length","remove","onclick","onClick","onmousein","onMouseIn","onmouseout","onMouseOut","evnt","evnt_ref","eventRefs","popup_card","width","margin","name","description","popup","Popup","setHTML","el","document","createElement","innerHTML","id","marker","Marker","offset","setLngLat","longitude","latitude","setPopup","addTo","addEventListener","current","scrollIntoView","behavior","block","showViewEventModal","displayedEvent","push","position","top","bottom","height","overflow","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { renderToString } from 'react-dom/server';\nimport { Card } from 'react-bootstrap';\n\n//https://blog.mapbox.com/mapbox-gl-js-react-764da6cc074a\n//---MAPBOX API---\n//https://docs.mapbox.com/mapbox-gl-js/api/#popup.event:open\n\n//--fontawesome react icons--\n//https://fontawesome.com/how-to-use/on-the-web/using-with/react\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiY2Rmcml0ejciLCJhIjoiY2sydzBmenM3MGF1djNrcWR3YzRmaGQ0aCJ9.y0TZwO3PN1sYjakT02t1fQ';\n\nclass MapBoxMapComponent extends Component {\n\n  static defaultProps = {\n    lng: 4,\n    lat: 34,\n    zoom: 10,\n    onMove: undefined,\n    events: [],\n    eventRefs: []\n  }\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      lng: props.lng,\n      lat: props.lat,\n      zoom: 10\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.markers = [];\n  }\n\n  componentDidMount() {\n\n    const {lng, lat, zoom} = this.state;\n\n    console.log(this.props.events);\n    console.log(this.props.testprop);\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v9',\n      center: [lng, lat],\n      zoom\n    });\n\n    this.map = map;\n\n    //changes latitude longitude state on move\n    //and calls onMove method from parent component => used to update events in\n    //parent\n    map.on('move', ()=> {\n      const {lng, lat} = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n\n      if(this.props.onMove !== undefined){\n        this.props.onMove(lat, lng);\n    }});\n\n    //add navigation controls like zooming\n    map.addControl(new mapboxgl.NavigationControl());\n\n  }\n\n  render() {\n    const {lng, lat, zoom} = this.state;\n\n    //remove old markers\n    for(var i = 0; i<this.markers.length; i++){\n      this.markers[i].remove();\n    }\n\n    this.markers = [];\n\n    //add new markers\n    const onclick = this.props.onClick;\n    const onmousein = this.props.onMouseIn;\n    const onmouseout = this.props.onMouseOut;\n\n    for(var i = 0; i<this.props.events.length; i++){\n      let evnt = this.props.events[i];\n      let evnt_ref = this.props.eventRefs[i];\n\n      //create popup and card for popup\n      var popup_card = <Card style={{width:\"10rem\", margin:\"5px\"}}>\n        <Card.Header>{evnt.name}</Card.Header>\n        <Card.Body>\n          <Card.Text>{evnt.description}</Card.Text>\n        </Card.Body>\n      </Card>\n      let popup = new mapboxgl.Popup()\n        .setHTML(renderToString(popup_card));\n\n      var el = document.createElement('div');\n      el.innerHTML = renderToString(<FontAwesomeIcon icon={faMapMarkerAlt}\n                                                     size=\"3x\"\n                                                     color=\"#00B0B0\"/>);\n      el.id = 'marker';\n\n      let marker = new mapboxgl.Marker(el, {offset:[-25, -25]})\n        .setLngLat([evnt.longitude, evnt.latitude])\n        .setPopup(popup)\n        .addTo(this.map);\n\n      //set marker event listeners\n      el.addEventListener('mouseenter', () => {\n              evnt_ref.current.scrollIntoView({behavior: 'smooth', block: 'start'});\n              popup.setLngLat([evnt.longitude, evnt.latitude]).addTo(this.map);\n      });\n      el.addEventListener('mouseleave', ()=>{\n        popup.remove();\n      })\n      el.addEventListener('click', ()=>{onclick({showViewEventModal:true, displayedEvent:evnt})});\n\n      this.markers.push(marker);\n    }\n\n    const style = {\n      position:'relative',\n      top:0,\n      bottom:0,\n      width:'99%',\n      height:'87vh',\n      overflow: 'hidden'\n    };\n\n    return <div style={style} ref={el => this.mapContainer = el} />;\n  }\n}\n\nexport default MapBoxMapComponent;\n"]},"metadata":{},"sourceType":"module"}