{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/EventList.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, Button } from 'react-bootstrap';\n/*\nparent should pass a .setState() call as an onClick prop to show modal for\nadding events\nex:\n  <EventList events={this.state.events}\n             onClick={(showevent, event)=>{this.setState(showevent, event)}}/>\n*/\n\nclass EventItem extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      key: this.props.my_event.id.toString(),\n      eventKey: this.props.my_event.id.toString(),\n      onClick: () => this.props.onClick({\n        showViewEventModal: true,\n        displayedEvent: this.props.my_event\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, my_event.name)));\n  }\n\n}\n\nclass EventList extends Component {\n  render() {\n    var event_list = this.props.events.map(my_event => React.createElement(EventItem, {\n      my_event: my_event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      style: {\n        height: \"50vh\",\n        overflow: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, event_list));\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/EventList.js"],"names":["React","Component","ListGroup","Button","EventItem","constructor","props","myRef","createRef","render","my_event","id","toString","onClick","showViewEventModal","displayedEvent","name","EventList","event_list","events","map","height","overflow"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,iBAAhC;AAEA;;;;;;;;AAQA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaP,KAAK,CAACQ,SAAN,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,MAAM,MAAtB;AAAuB,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,EAApB,CAAuBC,QAAvB,EAA5B;AACuB,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWI,QAAX,CAAoBC,EAApB,CAAuBC,QAAvB,EADjC;AAEuB,MAAA,OAAO,EAAE,MAAI,KAAKN,KAAL,CAAWO,OAAX,CAAmB;AAACC,QAAAA,kBAAkB,EAAC,IAApB;AAA0BC,QAAAA,cAAc,EAAC,KAAKT,KAAL,CAAWI;AAApD,OAAnB,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAQ,CAACM,IAAd,CAJF,CADF,CADF;AAUD;;AAjB+B;;AAoBlC,MAAMC,SAAN,SAAwBhB,SAAxB,CAAkC;AAChCQ,EAAAA,MAAM,GAAE;AACN,QAAIS,UAAU,GAAG,KAAKZ,KAAL,CAAWa,MAAX,CAAkBC,GAAlB,CAAsBV,QAAQ,IAAI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAEA,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CAAjB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACW,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,QAAQ,EAAC;AAAzB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,UADH,CADF,CADF;AAOD;;AAX+B;;AAclC,eAAeD,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport {ListGroup, Button} from 'react-bootstrap';\n\n/*\nparent should pass a .setState() call as an onClick prop to show modal for\nadding events\nex:\n  <EventList events={this.state.events}\n             onClick={(showevent, event)=>{this.setState(showevent, event)}}/>\n*/\n\nclass EventItem extends Component {\n  constructor(props){\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  render(){\n    return (\n      <div>\n        <ListGroup.Item action key={this.props.my_event.id.toString()}\n                               eventKey={this.props.my_event.id.toString()}\n                               onClick={()=>this.props.onClick({showViewEventModal:true, displayedEvent:this.props.my_event})}\n                               >\n          <h3>{my_event.name}</h3>\n        </ListGroup.Item>\n      </div>\n    )\n  }\n}\n\nclass EventList extends Component {\n  render(){\n    var event_list = this.props.events.map(my_event => <EventItem my_event={my_event}/>);\n\n    return (\n      <div>\n        <ListGroup style={{height:\"50vh\", overflow:'scroll'}}>\n          {event_list}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}