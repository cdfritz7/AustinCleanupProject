{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/ViewEventComponent.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass ViewEventComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /*sends post request to sign user up for event if they are logged in,\n  or tells them to log in if they are not */\n\n\n  handleSubmit() {\n    var user_id = sessionStorage.getItem('userId');\n    const response = fetch('http://localhost:8080/austinCleanupAPI/addUserEvent', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'userId': user_id,\n        'eventId': this.props.event.id,\n        'isOrganizer': false\n      })\n    });\n  }\n\n  render() {\n    var is_logged_in = sessionStorage.getItem(\"isLoggedOn\");\n\n    if (is_logged_in == \"True\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.event.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.event.latitude), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.props.event.longitude), React.createElement(Button, {\n        onClick: () => this.handleSubmit(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Sign Up!\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.event.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.event.latitude), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.event.longitude), React.createElement(Button, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Sign In to Sign Up\")));\n    }\n  }\n\n}\n\nexport default ViewEventComponent;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/ViewEventComponent.js"],"names":["React","Component","Container","Row","Col","Card","Button","Link","ViewEventComponent","constructor","props","handleSubmit","bind","user_id","sessionStorage","getItem","response","fetch","method","headers","body","JSON","stringify","event","id","render","is_logged_in","name","latitude","longitude"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EACQC,GADR,EAEQC,GAFR,EAGQC,IAHR,EAIQC,MAJR,QAIqB,iBAJrB;AAKA,SAAQC,IAAR,QAAmB,kBAAnB;;AACA,MAAMC,kBAAN,SAAiCP,SAAjC,CAA0C;AAExCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;AAED;;;;AAEAD,EAAAA,YAAY,GAAE;AACZ,QAAIE,OAAO,GAAGC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAd;AAEA,UAAMC,QAAQ,GAAGC,KAAK,CAAC,qDAAD,EAAwD;AAC1EC,MAAAA,MAAM,EAAE,MADkE;AAE1EC,MAAAA,OAAO,EAAE;AAAC,kBAAU,kBAAX;AAA+B,wBAAe;AAA9C,OAFiE;AAG1EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAUT,OADS;AAEnB,mBAAW,KAAKH,KAAL,CAAWa,KAAX,CAAiBC,EAFT;AAGnB,uBAAe;AAHI,OAAf;AAHoE,KAAxD,CAAtB;AASD;;AAEDC,EAAAA,MAAM,GAAE;AACN,QAAIC,YAAY,GAAGZ,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAnB;;AAEA,QAAGW,YAAY,IAAI,MAAnB,EAA0B;AACxB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKhB,KAAL,CAAWa,KAAX,CAAiBI,IAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKjB,KAAL,CAAWa,KAAX,CAAiBK,QAAtB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKlB,KAAL,CAAWa,KAAX,CAAiBM,SAAtB,CAHF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKlB,YAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF;AAUD,KAXD,MAWK;AACH,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWa,KAAX,CAAiBI,IAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKjB,KAAL,CAAWa,KAAX,CAAiBK,QAAtB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKlB,KAAL,CAAWa,KAAX,CAAiBM,SAAtB,CAHF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAJF,CADF;AAUD;AAEF;;AAnDuC;;AAsD1C,eAAerB,kBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Container,\n        Row,\n        Col,\n        Card,\n        Button} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nclass ViewEventComponent extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /*sends post request to sign user up for event if they are logged in,\n  or tells them to log in if they are not */\n  handleSubmit(){\n    var user_id = sessionStorage.getItem('userId');\n\n    const response = fetch('http://localhost:8080/austinCleanupAPI/addUserEvent', {\n        method: 'POST',\n        headers: {'Accept': 'application/json', 'Content-Type':'application/json'},\n        body: JSON.stringify({\n          'userId': user_id,\n          'eventId': this.props.event.id,\n          'isOrganizer': false\n        })\n    });\n  }\n\n  render(){\n    var is_logged_in = sessionStorage.getItem(\"isLoggedOn\");\n\n    if(is_logged_in == \"True\"){\n      return (\n        <div>\n          <h1>{this.props.event.name}</h1>\n          <h3>{this.props.event.latitude}</h3>\n          <h3>{this.props.event.longitude}</h3>\n          <Button onClick={()=>this.handleSubmit()}>\n            Sign Up!\n          </Button>\n        </div>\n      )\n    }else{\n      return (\n        <div>\n          <h1>{this.props.event.name}</h1>\n          <h3>{this.props.event.latitude}</h3>\n          <h3>{this.props.event.longitude}</h3>\n          <Button variant=\"secondary\">\n            <Link to=\"/Profile\">Sign In to Sign Up</Link>\n          </Button>\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default ViewEventComponent;\n"]},"metadata":{},"sourceType":"module"}