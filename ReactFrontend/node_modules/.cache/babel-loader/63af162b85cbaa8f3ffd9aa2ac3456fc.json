{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/MapPage.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Container, Row, Col, ListGroup, Modal, Button } from 'react-bootstrap/';\nimport ViewEventComponent from './ViewEventComponent.js';\nimport AddEventComponent from './AddEventComponent.js';\nimport EventList from './EventList.js';\nimport MapBoxMapComponent from './MapBoxMapComponent';\nimport './css/MapPage.css';\n\nclass MapPage extends Component {\n  constructor(props) {\n    super(props);\n    const search = props.location.search;\n    var floatLat;\n    var floatLng;\n\n    if (search) {\n      var latlong = search.slice(1).split(\"&\");\n      floatLat = parseFloat(latlong[0].slice([4]));\n      floatLng = parseFloat(latlong[1].slice([4]));\n    } else {\n      //austin lat long\n      floatLat = 30.27;\n      floatLng = -97.74;\n    }\n\n    this.state = {\n      latitude: floatLat,\n      longitude: floatLng,\n      search_str: this.props.match.params.latlong,\n      events: [],\n      eventRefs: [],\n      isLoggedIn: localStorage.getItem(\"isLoggedOn\"),\n      userId: localStorage.getItem(\"userId\"),\n      showAddEventModal: false,\n      showViewEventModal: false\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.resetEvents = this.resetEvents.bind(this);\n    this.removeSignUp = this.removeSignUp.bind(this);\n  } //creates a set of React refs for each event in event_json, this is used\n  //for scrolling\n\n\n  createEventRefs(event_json) {\n    var eventRefs = [];\n\n    for (var evnt in event_json) {\n      eventRefs.push(React.createRef());\n    }\n\n    return eventRefs;\n  } //called to reset our event list, used initially when component mounts\n  //or when a search is performed\n  //will be done by making an API call, right now just returns all events\n\n\n  resetEvents(latitude, longitude) {\n    fetch(\"http://localhost:8080/austinCleanupAPI/eventsByLatLong?lat=\".concat(latitude, \"&lng=\").concat(longitude)).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error in MapPage.js resetEvents, Network response not okay');\n      }\n    }).then(json => {\n      this.setState({\n        events: json,\n        eventRefs: this.createEventRefs(json),\n        latitude: latitude,\n        longitude: longitude\n      });\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/austinCleanupAPI/eventsByLatLong?lat=\".concat(this.state.latitude.toString(), \"&lng=\").concat(this.state.longitude.toString())).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error in MapPage.js componentDidMount, Network response not okay');\n      }\n    }).then(json => {\n      this.setState({\n        events: json,\n        eventRefs: this.createEventRefs(json)\n      });\n    });\n  }\n\n  removeSignUp() {\n    this.resetEvents(this.state.latitude, this.state.longitude);\n    this.setState({\n      showViewEventModal: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(EventList, {\n      events: this.state.events,\n      eventRefs: this.state.eventRefs,\n      onClick: (showevent, event) => {\n        this.setState(showevent, event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(MapBoxMapComponent, {\n      lat: this.state.latitude,\n      lng: this.state.longitude,\n      onMove: this.resetEvents,\n      events: this.state.events,\n      eventRefs: this.state.eventRefs,\n      testprop: 1,\n      onClick: (showevent, event) => {\n        this.setState(showevent, event);\n      },\n      onMouseIn: eventid => {\n        this.setState(eventid);\n      },\n      onMouseOut: eventid => {\n        this.setState(eventid);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        this.setState({\n          showAddEventModal: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Add Event\"), React.createElement(Modal, {\n      show: this.state.showAddEventModal,\n      onHide: () => {\n        this.setState({\n          showAddEventModal: false\n        });\n        this.resetEvents(this.state.latitude, this.state.longitude);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Add Event\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(AddEventComponent, {\n      isLoggedIn: this.state.isLoggedIn,\n      userId: this.state.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      show: this.state.showViewEventModal,\n      onHide: () => {\n        this.setState({\n          showViewEventModal: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(ViewEventComponent, {\n      event: this.state.displayedEvent,\n      isLoggedIn: this.state.isLoggedIn,\n      userId: this.state.userId,\n      removeSignUp: this.removeSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default MapPage;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/MapPage.js"],"names":["React","Component","GoogleMapReact","Container","Row","Col","ListGroup","Modal","Button","ViewEventComponent","AddEventComponent","EventList","MapBoxMapComponent","MapPage","constructor","props","search","location","floatLat","floatLng","latlong","slice","split","parseFloat","state","latitude","longitude","search_str","match","params","events","eventRefs","isLoggedIn","localStorage","getItem","userId","showAddEventModal","showViewEventModal","componentDidMount","bind","resetEvents","removeSignUp","createEventRefs","event_json","evnt","push","createRef","fetch","then","response","ok","json","Error","setState","toString","render","showevent","event","eventid","displayedEvent"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Container,\n        Row,\n        Col,\n        ListGroup,\n        Modal,\n        Button} from 'react-bootstrap/';\nimport ViewEventComponent from './ViewEventComponent.js';\nimport AddEventComponent from './AddEventComponent.js';\nimport EventList from './EventList.js';\nimport MapBoxMapComponent from './MapBoxMapComponent';\nimport './css/MapPage.css';\n\nclass MapPage extends Component {\n\n  constructor(props){\n    super(props);\n\n    const search = props.location.search;\n\n    var floatLat;\n    var floatLng;\n\n    if(search){\n        var latlong = search.slice(1).split(\"&\");\n        floatLat = parseFloat(latlong[0].slice([4]));\n        floatLng = parseFloat(latlong[1].slice([4]));\n\n    }else{\n       //austin lat long\n       floatLat = 30.27;\n       floatLng = -97.74;\n    }\n\n    this.state = {\n                  latitude:floatLat,\n                  longitude:floatLng,\n                  search_str:this.props.match.params.latlong,\n                  events:[],\n                  eventRefs:[],\n                  isLoggedIn:localStorage.getItem(\"isLoggedOn\"),\n                  userId:localStorage.getItem(\"userId\"),\n                  showAddEventModal:false,\n                  showViewEventModal:false\n                  };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.resetEvents = this.resetEvents.bind(this);\n    this.removeSignUp = this.removeSignUp.bind(this);\n  }\n\n  //creates a set of React refs for each event in event_json, this is used\n  //for scrolling\n  createEventRefs(event_json){\n    var eventRefs = [];\n    for(var evnt in event_json){\n      eventRefs.push(React.createRef());\n    }\n    return eventRefs;\n  }\n\n  //called to reset our event list, used initially when component mounts\n  //or when a search is performed\n  //will be done by making an API call, right now just returns all events\n  resetEvents(latitude, longitude){\n    fetch(`http://localhost:8080/austinCleanupAPI/eventsByLatLong?lat=${latitude}&lng=${longitude}`)\n    .then(function(response){\n      if(response.ok){\n        return response.json();\n      }else{\n        throw new Error('Error in MapPage.js resetEvents, Network response not okay')\n      }\n    }).then(json => {\n      this.setState({events:json,\n                    eventRefs:this.createEventRefs(json),\n                    latitude:latitude,\n                    longitude:longitude})\n    });\n  }\n\n  componentDidMount(){\n    fetch(`http://localhost:8080/austinCleanupAPI/eventsByLatLong?lat=${this.state.latitude.toString()}&lng=${this.state.longitude.toString()}`)\n    .then(function(response){\n      if(response.ok){\n        return response.json();\n      }else{\n        throw new Error('Error in MapPage.js componentDidMount, Network response not okay')\n      }\n    }).then(json => {\n      this.setState({events:json, eventRefs:this.createEventRefs(json)})\n    });\n  }\n\n  removeSignUp(){\n    this.resetEvents(this.state.latitude, this.state.longitude);\n    this.setState({showViewEventModal:false});\n  }\n\n  render(){\n    return(\n      <div>\n        <Container className='centered'>\n          <Row>\n            <Col xs={3}>\n              <EventList events={this.state.events}\n                         eventRefs={this.state.eventRefs}\n                         onClick={(showevent, event)=>{this.setState(showevent, event)}}/>\n            </Col>\n            <Col xs={9}>\n              <MapBoxMapComponent lat={this.state.latitude} lng={this.state.longitude}\n                                  onMove={this.resetEvents}\n                                  events={this.state.events}\n                                  eventRefs={this.state.eventRefs}\n                                  testprop={1}\n                                  onClick={(showevent, event)=>{this.setState(showevent, event)}}\n                                  onMouseIn={(eventid)=>{this.setState(eventid)}}\n                                  onMouseOut={(eventid)=>{this.setState(eventid)}}/>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-md-center\">\n            <Col xs={12}>\n              <Button variant=\"primary\" onClick={()=>{this.setState({showAddEventModal:true})}}>\n                Add Event\n              </Button>\n\n              {/* modal for adding events*/}\n              <Modal show={this.state.showAddEventModal}\n                     onHide={()=>{\n                                  this.setState({showAddEventModal:false});\n                                  this.resetEvents(this.state.latitude, this.state.longitude);\n                                  }}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Add Event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body><AddEventComponent isLoggedIn={this.state.isLoggedIn}\n                                               userId={this.state.userId}/>\n                </Modal.Body>\n              </Modal>\n\n              {/*modal for viewing events*/}\n              <Modal show={this.state.showViewEventModal}\n                     onHide={()=>{this.setState({showViewEventModal:false})}}\n                     >\n                <Modal.Header closeButton/>\n                <Modal.Body><ViewEventComponent event={this.state.displayedEvent}\n                                                isLoggedIn={this.state.isLoggedIn}\n                                                userId={this.state.userId}\n                                                removeSignUp={this.removeSignUp}/>\n                </Modal.Body>\n              </Modal>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n    )\n\n  }\n}\n\nexport default MapPage;\n"]},"metadata":{},"sourceType":"module"}