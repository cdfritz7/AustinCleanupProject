{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/LoginComponent.js\";\nimport React, { Component } from 'react';\nimport { Form, Container, Row, Col, Card, Button, Modal } from 'react-bootstrap';\nimport AddAccountComponent from './AddAccountComponent.js';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      login_response: '',\n      showCreateAccountModal: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log('Submitted');\n    fetch('http://localhost:8080/austinCleanupAPI/checkIsUser', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': this.state.username,\n        'password': this.state.password\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        console.log('Network response not okay');\n      }\n    }).then(json => {\n      this.setState({\n        login_response: json.IsValid\n      });\n    });\n    sessionStorage.setItem('isLoggedOn', 'True');\n    console.log(sessionStorage.getItem('isLoggedOn')); //depending on whether response is okay,\n    //set local storage boolean keeping track of login to true along with user id\n  }\n\n  handleUsernameChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  } //checks if user is logged on before rendering the component\n\n\n  componentDidMount() {\n    let isLoggedOn = sessionStorage.getItem('isLoggedOn');\n\n    if (isLoggedOn === \"True\") {\n      this.setState({\n        login_response: \"True\"\n      });\n    }\n  }\n\n  render() {\n    if (this.state.login_response === \"False\" || this.state.login_response === \"\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Form.Control, {\n        value: this.state.username,\n        onChange: this.handleUsernameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        value: this.state.password,\n        onChange: this.handlePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Log in\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.setState({\n            showCreateAccountModal: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Create New Account\"), React.createElement(Modal, {\n        show: this.state.showCreateAccountModal,\n        onHide: () => {\n          this.setState({\n            showCreateAccountModal: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"New Account\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(AddAccountComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })))))));\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" Logged In \");\n    }\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/LoginComponent.js"],"names":["React","Component","Form","Container","Row","Col","Card","Button","Modal","AddAccountComponent","LoginComponent","constructor","props","state","username","password","login_response","showCreateAccountModal","handleSubmit","bind","handleUsernameChange","handlePasswordChange","event","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","json","setState","IsValid","sessionStorage","setItem","getItem","target","value","componentDidMount","isLoggedOn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Form,\n        Container,\n        Row,\n        Col,\n        Card,\n        Button,\n        Modal} from 'react-bootstrap';\nimport AddAccountComponent from './AddAccountComponent.js';\n\nclass LoginComponent extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      username:'',\n      password:'',\n      login_response:'',\n      showCreateAccountModal:false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n\n    console.log('Submitted');\n\n    fetch('http://localhost:8080/austinCleanupAPI/checkIsUser', {\n      method:\"POST\",\n      headers: {'Accept': 'application/json', 'Content-Type':'application/json'},\n      body: JSON.stringify({\n        'username': this.state.username,\n        'password': this.state.password\n      })\n    }).then(response => {\n      if(response.ok){\n        return response.json();\n      }else{\n        console.log('Network response not okay');\n      }\n    }).then(json => {\n      this.setState({login_response:json.IsValid});\n    });\n\n\n    sessionStorage.setItem('isLoggedOn', 'True');\n    console.log(sessionStorage.getItem('isLoggedOn'))\n    \n    //depending on whether response is okay,\n    //set local storage boolean keeping track of login to true along with user id\n  }\n\n  handleUsernameChange(event){\n    this.setState({username:event.target.value});\n  }\n\n  handlePasswordChange(event){\n    this.setState({password:event.target.value});\n  }\n\n  //checks if user is logged on before rendering the component\n  componentDidMount(){\n    let isLoggedOn = sessionStorage.getItem('isLoggedOn');\n    if(isLoggedOn === \"True\"){\n      this.setState({login_response:\"True\"})\n    }\n  }\n\n  render(){\n    if(this.state.login_response === \"False\" || this.state.login_response === \"\"){\n      return (\n        <div>\n          <Container>\n            <Row>\n              <Col xs={12} >\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control value={this.state.username} onChange={this.handleUsernameChange}></Form.Control>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control value={this.state.password} onChange={this.handlePasswordChange}></Form.Control>\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">\n                    Log in\n                  </Button>\n                </Form>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={12}>\n                <Button variant=\"primary\" onClick={() => {this.setState({showCreateAccountModal:true})}} >\n                Create New Account\n                </Button>\n                <Modal show={this.state.showCreateAccountModal}\n                       onHide={() => {this.setState({showCreateAccountModal:false})}}>\n                  <Modal.Header closeButton>\n                    <Modal.Title>New Account</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body><AddAccountComponent /></Modal.Body>\n                </Modal>\n              </Col>\n            </Row>\n         </Container>\n       </div>\n      )\n    }else{\n      return (<h1> Logged In </h1>);\n    }\n  }\n}\n\nexport default LoginComponent;\n"]},"metadata":{},"sourceType":"module"}