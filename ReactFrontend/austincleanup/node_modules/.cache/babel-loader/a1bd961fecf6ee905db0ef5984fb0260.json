{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/EventList.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, Button } from 'react-bootstrap';\n/*\nparent should pass a .setState() call as an onClick prop to show modal for\nadding events\nex:\n  <EventList events={this.state.events}\n             onClick={(showevent, event)=>{this.setState(showevent, event)}}/>\n*/\n\nclass EventItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.myRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      key: this.props.my_event.id.toString(),\n      eventKey: this.props.my_event.id.toString(),\n      onClick: () => {\n        this.props.onClick({\n          showViewEventModal: true,\n          displayedEvent: this.props.my_event\n        });\n      },\n      ref: this.props.myRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.my_event.name)));\n  }\n\n}\n\nEventItem.defaultProps = {\n  myRef: undefined\n};\n\nclass EventList extends Component {\n  render() {\n    var event_items = [];\n\n    for (var i = 0; i < this.props.events.length; i++) {\n      if (this.props.eventRefs.length === 0) {\n        event_items.push(React.createElement(EventItem, {\n          my_event: this.props.events[i],\n          onClick: this.props.onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      } else {\n        event_items.push(React.createElement(EventItem, {\n          my_event: this.props.events[i],\n          my_ref: this.props.eventRefs[i],\n          onClick: this.props.onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }));\n      }\n    }\n\n    console.log(this.props.eventRefs);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      style: {\n        height: \"20vh\",\n        overflow: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, event_items));\n  }\n\n}\n\nEventList.defaultProps = {\n  events: [],\n  eventRefs: []\n};\nexport default EventList;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/EventList.js"],"names":["React","Component","ListGroup","Button","EventItem","constructor","props","render","myRef","my_event","id","toString","onClick","showViewEventModal","displayedEvent","name","defaultProps","undefined","EventList","event_items","i","events","length","eventRefs","push","console","log","height","overflow"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,iBAAhC;AAEA;;;;;;;;AAQA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAMhCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,GAAG,EAAE,KAAKC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,MAAM,MAAtB;AAAuB,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,EAApB,CAAuBC,QAAvB,EAA5B;AACuB,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWG,QAAX,CAAoBC,EAApB,CAAuBC,QAAvB,EADjC;AAEuB,MAAA,OAAO,EAAE,MAAI;AACX,aAAKL,KAAL,CAAWM,OAAX,CAAmB;AAACC,UAAAA,kBAAkB,EAAC,IAApB;AAA0BC,UAAAA,cAAc,EAAC,KAAKR,KAAL,CAAWG;AAApD,SAAnB;AACD,OAJxB;AAKuB,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE,KALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWG,QAAX,CAAoBM,IAAzB,CAPF,CADF,CADF;AAaD;;AAxB+B;;AAA5BX,S,CAEGY,Y,GAAe;AACpBR,EAAAA,KAAK,EAAES;AADa,C;;AAyBxB,MAAMC,SAAN,SAAwBjB,SAAxB,CAAkC;AAOhCM,EAAAA,MAAM,GAAE;AACN,QAAIY,WAAW,GAAG,EAAlB;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKd,KAAL,CAAWe,MAAX,CAAkBC,MAAjC,EAAyCF,CAAC,EAA1C,EAA6C;AAC3C,UAAG,KAAKd,KAAL,CAAWiB,SAAX,CAAqBD,MAArB,KAAgC,CAAnC,EAAqC;AACnCH,QAAAA,WAAW,CAACK,IAAZ,CAAiB,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWe,MAAX,CAAkBD,CAAlB,CAArB;AACW,UAAA,OAAO,EAAE,KAAKd,KAAL,CAAWM,OAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AAED,OAHD,MAGK;AACHO,QAAAA,WAAW,CAACK,IAAZ,CAAiB,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWe,MAAX,CAAkBD,CAAlB,CAArB;AACW,UAAA,MAAM,EAAE,KAAKd,KAAL,CAAWiB,SAAX,CAAqBH,CAArB,CADnB;AAEW,UAAA,OAAO,EAAE,KAAKd,KAAL,CAAWM,OAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AAGD;AACF;;AAEDa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWiB,SAAvB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACI,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,QAAQ,EAAC;AAAzB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,WADH,CADF,CADF;AAOD;;AA9B+B;;AAA5BD,S,CAEGF,Y,GAAe;AACpBK,EAAAA,MAAM,EAAE,EADY;AAEpBE,EAAAA,SAAS,EAAC;AAFU,C;AA+BxB,eAAeL,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport {ListGroup, Button} from 'react-bootstrap';\n\n/*\nparent should pass a .setState() call as an onClick prop to show modal for\nadding events\nex:\n  <EventList events={this.state.events}\n             onClick={(showevent, event)=>{this.setState(showevent, event)}}/>\n*/\n\nclass EventItem extends Component {\n\n  static defaultProps = {\n    myRef: undefined\n  }\n\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div ref={this.myRef}>\n        <ListGroup.Item action key={this.props.my_event.id.toString()}\n                               eventKey={this.props.my_event.id.toString()}\n                               onClick={()=>{\n                                 this.props.onClick({showViewEventModal:true, displayedEvent:this.props.my_event})\n                               }}\n                               ref={this.props.myRef}\n                               >\n          <h3>{this.props.my_event.name}</h3>\n        </ListGroup.Item>\n      </div>\n    )\n  }\n}\n\nclass EventList extends Component {\n\n  static defaultProps = {\n    events: [],\n    eventRefs:[]\n  }\n\n  render(){\n    var event_items = []\n\n    for(var i=0; i<this.props.events.length; i++){\n      if(this.props.eventRefs.length === 0){\n        event_items.push(<EventItem my_event={this.props.events[i]}\n                                    onClick={this.props.onClick}/>);\n      }else{\n        event_items.push(<EventItem my_event={this.props.events[i]}\n                                    my_ref={this.props.eventRefs[i]}\n                                    onClick={this.props.onClick}/>);\n      }\n    }\n\n    console.log(this.props.eventRefs);\n    \n    return (\n      <div>\n        <ListGroup style={{height:\"20vh\", overflow:'scroll'}}>\n          {event_items}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}