{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/ViewEventComponent.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass ViewEventComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedUp: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n  /*sends post request to sign user up for event if they are logged in,\n  or tells them to log in if they are not */\n\n\n  handleSubmit() {\n    const response = fetch('http://localhost:8080/austinCleanupAPI/addUserEvent', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'userId': this.props.userId,\n        'eventId': this.props.event.id.toString(),\n        'isOrganizer': \"false\"\n      })\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.userId);\n    console.log(this.props.event.id);\n    fetch(\"http://localhost:8080/austinCleanupAPI/isUserSignedUpForEvent?userId=\".concat(this.props.userId, \"&eventId=\").concat(this.props.event.id)).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error in ViewEventComponent.js componentDidMount, Network response not okay');\n      }\n    }).then(json => {\n      console.log('cdm');\n      console.log(json);\n      console.log('---');\n      this.setState({\n        isSignedUp: json\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.isSignedUp);\n\n    if (this.props.isLoggedIn == \"True\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.event.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.event.latitude), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.event.longitude), React.createElement(Button, {\n        onClick: () => this.handleSubmit(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Sign Up!\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.props.event.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.event.latitude), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.event.longitude), React.createElement(Button, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Sign In to Sign Up\")));\n    }\n  }\n\n}\n\nexport default ViewEventComponent;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/ViewEventComponent.js"],"names":["React","Component","Container","Row","Col","Card","Button","Link","ViewEventComponent","constructor","props","state","isSignedUp","handleSubmit","bind","componentDidMount","response","fetch","method","headers","body","JSON","stringify","userId","event","id","toString","console","log","then","ok","json","Error","setState","render","isLoggedIn","name","latitude","longitude"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Container,\n        Row,\n        Col,\n        Card,\n        Button} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nclass ViewEventComponent extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      isSignedUp : false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  /*sends post request to sign user up for event if they are logged in,\n  or tells them to log in if they are not */\n  handleSubmit(){\n    const response = fetch('http://localhost:8080/austinCleanupAPI/addUserEvent', {\n        method: 'POST',\n        headers: {'Accept': 'application/json', 'Content-Type':'application/json'},\n        body: JSON.stringify({\n          'userId': this.props.userId,\n          'eventId': this.props.event.id.toString(),\n          'isOrganizer': \"false\"\n        })\n    });\n  }\n\n  componentDidMount(){\n    console.log(this.props.userId);\n    console.log(this.props.event.id);\n    fetch(`http://localhost:8080/austinCleanupAPI/isUserSignedUpForEvent?userId=${this.props.userId}&eventId=${this.props.event.id}`)\n    .then(function(response){\n      if(response.ok){\n        return response.json();\n      }else{\n        throw new Error('Error in ViewEventComponent.js componentDidMount, Network response not okay')\n      }\n    }).then(json => {\n      console.log('cdm');\n      console.log(json);\n      console.log('---');\n      this.setState({isSignedUp:json})\n    });\n  }\n\n  render(){\n\n    console.log(this.state.isSignedUp);\n    if(this.props.isLoggedIn == \"True\"){\n      return (\n        <div>\n          <h1>{this.props.event.name}</h1>\n          <h3>{this.props.event.latitude}</h3>\n          <h3>{this.props.event.longitude}</h3>\n          <Button onClick={()=>this.handleSubmit()}>\n            Sign Up!\n          </Button>\n        </div>\n      )\n    }else{\n      return (\n        <div>\n          <h1>{this.props.event.name}</h1>\n          <h3>{this.props.event.latitude}</h3>\n          <h3>{this.props.event.longitude}</h3>\n          <Button variant=\"secondary\">\n            <Link to=\"/Profile\">Sign In to Sign Up</Link>\n          </Button>\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default ViewEventComponent;\n"]},"metadata":{},"sourceType":"module"}