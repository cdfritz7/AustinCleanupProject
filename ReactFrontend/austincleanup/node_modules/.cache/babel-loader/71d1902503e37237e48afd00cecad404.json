{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport LoginComponent from './LoginComponent.js';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nclass ProfileContent extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.props.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Log Out\");\n  }\n\n}\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login_response: '',\n      username: '',\n      password: ''\n    };\n    this.handleLogonSubmit = this.handleLogonSubmit.bind(this);\n    this.handleLogoffSubmit = this.handleLogoffSubmit.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  handleLogoffSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      login_response: 'False',\n      username: '',\n      password: ''\n    });\n    sessionStorage.setItem('isLoggedOn', 'True');\n  }\n\n  handleLogonSubmit(event) {\n    event.preventDefault();\n    console.log('Submitted');\n    fetch('http://localhost:8080/austinCleanupAPI/checkIsUser', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': this.state.username,\n        'password': this.state.password\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        console.log('Network response not okay');\n      }\n    }).then(json => {\n      this.setState({\n        login_response: json.IsValid\n      });\n    }); //depending on whether response is okay,\n    //set local storage boolean keeping track of login to true along with user id\n    //right now assumes response was valid and sets to True\n\n    sessionStorage.setItem('isLoggedOn', 'True');\n  }\n\n  handleUsernameChange(usern) {\n    this.setState({\n      username: usern\n    });\n  }\n\n  handlePasswordChange(passw) {\n    this.setState({\n      password: passw\n    });\n  }\n\n  render() {\n    var is_logged_in = sessionStorage.getItem('isLoggedOn');\n    var ret_component;\n    console.log(is_logged_in);\n    console.log(typeof is_logged_in);\n    console.log(typeof \"True\");\n\n    if (is_logged_in === \"True\") {\n      ret_component = React.createElement(ProfileContent, {\n        onSubmit: this.handleLogoffSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    } else {\n      ret_component = React.createElement(LoginComponent, {\n        onSubmit: this.handleLogonSubmit,\n        handleUsernameChange: this.handleUsernameChange,\n        handlePasswordChange: this.handlePasswordChange,\n        username: this.state.username,\n        passowrd: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, ret_component)));\n  }\n\n}\n\nexport default ProfilePage;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/ProfilePage.js"],"names":["React","Component","LoginComponent","Container","Row","Col","Button","ProfileContent","constructor","props","render","handleSubmit","ProfilePage","state","login_response","username","password","handleLogonSubmit","bind","handleLogoffSubmit","handleUsernameChange","handlePasswordChange","event","preventDefault","setState","sessionStorage","setItem","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","json","IsValid","usern","passw","is_logged_in","getItem","ret_component"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport LoginComponent from './LoginComponent.js';\nimport {\n        Container,\n        Row,\n        Col,\n        Button\n       } from 'react-bootstrap';\n\nclass ProfileContent extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <Button variant=\"primary\"\n              onClick={this.props.handleSubmit}>\n        Log Out\n      </Button>\n    )\n  }\n}\n\n\nclass ProfilePage extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      login_response:'',\n      username:'',\n      password:''\n    };\n\n    this.handleLogonSubmit = this.handleLogonSubmit.bind(this);\n    this.handleLogoffSubmit = this.handleLogoffSubmit.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  handleLogoffSubmit(event){\n    event.preventDefault();\n    this.setState({login_response:'False',\n                   username:'',\n                   password:''});\n    sessionStorage.setItem('isLoggedOn', 'True');\n  }\n\n  handleLogonSubmit(event){\n    event.preventDefault();\n\n    console.log('Submitted');\n\n    fetch('http://localhost:8080/austinCleanupAPI/checkIsUser', {\n      method:\"POST\",\n      headers: {'Accept': 'application/json', 'Content-Type':'application/json'},\n      body: JSON.stringify({\n        'username': this.state.username,\n        'password': this.state.password\n      })\n    }).then(response => {\n      if(response.ok){\n        return response.json();\n      }else{\n        console.log('Network response not okay');\n      }\n    }).then(json => {\n      this.setState({login_response:json.IsValid});\n    });\n    //depending on whether response is okay,\n    //set local storage boolean keeping track of login to true along with user id\n    //right now assumes response was valid and sets to True\n    sessionStorage.setItem('isLoggedOn', 'True');\n  }\n\n  handleUsernameChange(usern){\n    this.setState({username:usern});\n  }\n\n  handlePasswordChange(passw){\n    this.setState({password:passw});\n  }\n\n  render(){\n\n    var is_logged_in = sessionStorage.getItem('isLoggedOn');\n    var ret_component;\n\n    console.log(is_logged_in);\n    console.log(typeof is_logged_in);\n    console.log(typeof \"True\");\n\n    if(is_logged_in === \"True\"){\n      ret_component = <ProfileContent onSubmit={this.handleLogoffSubmit}/>;\n    }else{\n      ret_component = <LoginComponent onSubmit={this.handleLogonSubmit}\n                                      handleUsernameChange={this.handleUsernameChange}\n                                      handlePasswordChange={this.handlePasswordChange}\n                                      username={this.state.username}\n                                      passowrd={this.state.password}/>;\n    }\n\n    return (\n        <Container>\n          <Row>\n            <Col xs={12}>\n              {ret_component}\n            </Col>\n          </Row>\n        </Container>\n    )\n  }\n}\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"module"}