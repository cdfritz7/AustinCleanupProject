{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/MapPage.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Container, Row, Col, ListGroup, Modal, Button } from 'react-bootstrap/';\nimport ViewEventComponent from './ViewEventComponent.js';\nimport AddEventComponent from './AddEventComponent.js';\nimport EventList from './EventList.js';\nimport './css/MapPage.css';\n\nclass EventMarkerSmall extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" \", this.props.name, \" \");\n  }\n\n}\n\nclass SimpleMap extends Component {\n  render() {\n    //create list of markers based on passed in events\n    var marker_list = this.props.events.map(my_event => React.createElement(EventMarkerSmall, {\n      key: my_event.id.toString(),\n      lat: my_event.latitude,\n      lng: my_event.longitude,\n      name: my_event.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n    return (//always set container height explicitly, required by google maps\n      React.createElement(\"div\", {\n        style: {\n          height: '75vh',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact //we need to get a google maps api key to use full functionality\n      //bootstrapURLKeys={{key:/*your key here8\n      , {\n        defaultCenter: this.props.dcenter,\n        defaultZoom: this.props.zoom,\n        center: this.props.center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, marker_list))\n    );\n  }\n\n}\n\nSimpleMap.defaultProps = {\n  dcenter: {\n    lat: 0.0,\n    lng: 0.0\n  },\n  zoom: 10\n};\n\nclass MapPage extends Component {\n  constructor(props) {\n    super(props);\n    const search = props.location.search;\n    var floatLat;\n    var floatLng;\n\n    if (search) {\n      var latlong = search.slice(1).split(\"&\");\n      floatLat = parseFloat(latlong[0].slice([4]));\n      floatLng = parseFloat(latlong[1].slice([4]));\n    } else {\n      //austin lat long\n      floatLat = 30.27;\n      floatLng = -97.74;\n    }\n\n    this.state = {\n      latitude: floatLat,\n      longitude: floatLng,\n      search_str: this.props.match.params.latlong,\n      events: [],\n      showAddEventModal: false,\n      showViewEventModal: false\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.resetEvents = this.resetEvents.bind(this);\n  } //called to reset our event list, used initially when component mounts\n  //or when a search is performed\n  //will be done by making an API call, right now just returns all events\n\n\n  resetEvents(latitude, longitude) {\n    fetch(\"http://localhost:8080/austinCleanupAPI/eventsByLatLong?lat=\".concat(latitude, \"&lng=\").concat(longitude)).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error in MapPage.js resetEvents, Network response not okay');\n      }\n    }).then(json => {\n      this.setState({\n        events: json,\n        latitude: latitude,\n        longitude: longitude\n      });\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/austinCleanupAPI/eventsByLatLong?lat=\".concat(this.state.latitude.toString(), \"&lng=\").concat(this.state.longitude.toString())).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error in MapPage.js resetEvents, Network response not okay');\n      }\n    }).then(json => {\n      this.setState({\n        events: json\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(EventList, {\n      events: this.state.events,\n      onClick: (showevent, event) => {\n        this.setState(showevent, event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(SimpleMap, {\n      center: {\n        lat: this.state.latitude,\n        lng: this.state.longitude\n      },\n      events: this.state.events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        this.setState({\n          showAddEventModal: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Add Event\"), React.createElement(Modal, {\n      show: this.state.showAddEventModal,\n      onHide: () => {\n        this.setState({\n          showAddEventModal: false\n        });\n        this.resetEvents(this.state.latitude, this.state.longitude);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Add Event\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(AddEventComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      show: this.state.showViewEventModal,\n      onHide: () => {\n        this.setState({\n          showViewEventModal: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(ViewEventComponent, {\n      event: this.state.displayedEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default MapPage;","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/MapPage.js"],"names":["React","Component","GoogleMapReact","Container","Row","Col","ListGroup","Modal","Button","ViewEventComponent","AddEventComponent","EventList","EventMarkerSmall","constructor","props","render","name","SimpleMap","marker_list","events","map","my_event","id","toString","latitude","longitude","height","width","dcenter","zoom","center","defaultProps","lat","lng","MapPage","search","location","floatLat","floatLng","latlong","slice","split","parseFloat","state","search_str","match","params","showAddEventModal","showViewEventModal","componentDidMount","bind","resetEvents","fetch","then","response","ok","json","Error","setState","showevent","event","displayedEvent"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {Container,\n        Row,\n        Col,\n        ListGroup,\n        Modal,\n        Button} from 'react-bootstrap/';\nimport ViewEventComponent from './ViewEventComponent.js';\nimport AddEventComponent from './AddEventComponent.js';\nimport EventList from './EventList.js';\nimport './css/MapPage.css';\n\nclass EventMarkerSmall extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    return <h3> {this.props.name} </h3>\n  }\n}\n\nclass SimpleMap extends Component {\n  static defaultProps = {\n    dcenter: {\n      lat:0.0,\n      lng:0.0\n    },\n    zoom: 10\n  };\n\n  render() {\n    //create list of markers based on passed in events\n    var marker_list = this.props.events.map(my_event =>\n    <EventMarkerSmall key={my_event.id.toString()}\n                      lat={my_event.latitude}\n                      lng={my_event.longitude}\n                      name={my_event.name} />);\n\n    return (\n      //always set container height explicitly, required by google maps\n      <div style={{height: '75vh', width: '100%'}}>\n        <GoogleMapReact\n          //we need to get a google maps api key to use full functionality\n          //bootstrapURLKeys={{key:/*your key here8\n          defaultCenter={this.props.dcenter}\n          defaultZoom={this.props.zoom}\n          center={this.props.center}\n        >\n          {marker_list}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nclass MapPage extends Component {\n\n  constructor(props){\n    super(props);\n\n    const search = props.location.search;\n\n    var floatLat;\n    var floatLng;\n\n    if(search){\n        var latlong = search.slice(1).split(\"&\");\n        floatLat = parseFloat(latlong[0].slice([4]));\n        floatLng = parseFloat(latlong[1].slice([4]));\n\n    }else{\n       //austin lat long\n       floatLat = 30.27;\n       floatLng = -97.74;\n    }\n\n    this.state = {\n                  latitude:floatLat,\n                  longitude:floatLng,\n                  search_str:this.props.match.params.latlong,\n                  events:[],\n                  showAddEventModal:false,\n                  showViewEventModal:false\n                  };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.resetEvents = this.resetEvents.bind(this);\n  }\n\n  //called to reset our event list, used initially when component mounts\n  //or when a search is performed\n  //will be done by making an API call, right now just returns all events\n  resetEvents(latitude, longitude){\n    fetch(`http://localhost:8080/austinCleanupAPI/eventsByLatLong?lat=${latitude}&lng=${longitude}`)\n    .then(function(response){\n      if(response.ok){\n        return response.json();\n      }else{\n        throw new Error('Error in MapPage.js resetEvents, Network response not okay')\n      }\n    }).then(json => {\n      this.setState({events:json, latitude:latitude, longitude:longitude})\n    });\n  }\n\n  componentDidMount(){\n    fetch(`http://localhost:8080/austinCleanupAPI/eventsByLatLong?lat=${this.state.latitude.toString()}&lng=${this.state.longitude.toString()}`)\n    .then(function(response){\n      if(response.ok){\n        return response.json();\n      }else{\n        throw new Error('Error in MapPage.js resetEvents, Network response not okay')\n      }\n    }).then(json => {\n      this.setState({events:json})\n    });\n  }\n\n  render(){\n    return(\n      <div>\n        <Container className='centered'>\n          <Row>\n            <Col xs={4}>\n              <EventList events={this.state.events}\n                         onClick={(showevent, event)=>{this.setState(showevent, event)}}/>\n            </Col>\n            <Col xs={8}>\n              <SimpleMap center={{lat:this.state.latitude,\n                                  lng:this.state.longitude}}\n                         events={this.state.events}/>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={12}>\n              <Button variant=\"primary\"\n                      onClick={()=>{this.setState({showAddEventModal:true})}}>\n                Add Event\n              </Button>\n\n              {/* modal for adding events*/}\n              <Modal show={this.state.showAddEventModal}\n                     onHide={()=>{\n                                  this.setState({showAddEventModal:false});\n                                  this.resetEvents(this.state.latitude, this.state.longitude);\n                                  }}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Add Event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body><AddEventComponent /></Modal.Body>\n              </Modal>\n\n              {/*modal for viewing events*/}\n              <Modal show={this.state.showViewEventModal}\n                     onHide={()=>{this.setState({showViewEventModal:false})}}\n                     >\n                <Modal.Header closeButton/>\n                <Modal.Body><ViewEventComponent event={this.state.displayedEvent}/></Modal.Body>\n              </Modal>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n    )\n\n  }\n}\n\nexport default MapPage;\n"]},"metadata":{},"sourceType":"module"}