{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/EventPage.js\";\nimport React, { Component } from 'react';\nimport { Form, Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\n\nclass EventPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      address: '',\n      latitude: '',\n      longitude: '',\n      description: '',\n      refresh: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleLatitudeChange = this.handleLatitudeChange.bind(this);\n    this.handleLongitudeChange = this.handleLongitudeChange.bind(this);\n    this.handleAddressChange = this.handleAddressChange.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); //post to database\n\n    const response = fetch('http://localhost:8080/austinCleanupAPI/addEvent', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'name': this.state.name,\n        'address': this.state.address,\n        'latitude': this.state.latitude,\n        'longitude': this.state.longitude,\n        'description': this.state.description\n      })\n    });\n    console.log(response);\n    this.setState({\n      \"refresh\": true\n    });\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleDescChange(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  handleAddressChange(event) {\n    this.setState({\n      address: event.target.value\n    });\n  }\n\n  handleLatitudeChange(event) {\n    this.setState({\n      latitude: event.target.value\n    });\n  }\n\n  handleLongitudeChange(event) {\n    this.setState({\n      longitude: event.target.value\n    });\n  }\n\n  render() {\n    if (this.state.refresh) {\n      return React.createElement(Redirect, {\n        to: \"/testEventPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Form.Control, {\n        placeholder: \"Enter Name of Event\",\n        onChange: this.handleNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Form.Control, {\n        placeholder: \"Enter Address\",\n        onChange: this.handleAddressChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Latitude\"), React.createElement(Form.Control, {\n        placeholder: \"Enter Latitude\",\n        onChange: this.handleLatitudeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Longitude\"), React.createElement(Form.Control, {\n        placeholder: \"Enter Longitude\",\n        onChange: this.handleLongitudeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Form.Control, {\n        placeholder: \"Enter Description\",\n        onChange: this.handleDescChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }\n\n}\n\nexport default withRouter(EventPage);","map":{"version":3,"sources":["/home/fritz/Projects/austincleanup/ReactFrontend/austincleanup/src/EventPage.js"],"names":["React","Component","Form","Container","Row","Col","Card","Button","Redirect","EventPage","constructor","props","state","name","address","latitude","longitude","description","refresh","handleSubmit","bind","handleNameChange","handleLatitudeChange","handleLongitudeChange","handleAddressChange","handleDescChange","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","console","log","setState","target","value","render","withRouter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Form,\n        Container,\n        Row,\n        Col,\n        Card,\n        Button} from 'react-bootstrap';\nimport {Redirect} from \"react-router-dom\";\n\nclass EventPage extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      name:'',\n      address:'',\n      latitude:'',\n      longitude:'',\n      description:'',\n      refresh:false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleLatitudeChange = this.handleLatitudeChange.bind(this);\n    this.handleLongitudeChange = this.handleLongitudeChange.bind(this);\n    this.handleAddressChange = this.handleAddressChange.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    //post to database\n    const response = fetch('http://localhost:8080/austinCleanupAPI/addEvent', {\n      method: 'POST',\n      headers: {'Accept': 'application/json', 'Content-Type':'application/json'},\n      body: JSON.stringify({\n        'name': this.state.name,\n        'address': this.state.address,\n        'latitude': this.state.latitude,\n        'longitude': this.state.longitude,\n        'description': this.state.description,\n      })\n    });\n\n    console.log(response);\n\n    this.setState({\"refresh\":true})\n  }\n\n  handleNameChange(event){\n    this.setState({name:event.target.value});\n  }\n\n  handleDescChange(event){\n    this.setState({description:event.target.value});\n  }\n\n  handleAddressChange(event){\n    this.setState({address:event.target.value});\n  }\n\n  handleLatitudeChange(event){\n    this.setState({latitude:event.target.value});\n  }\n\n  handleLongitudeChange(event){\n    this.setState({longitude:event.target.value});\n  }\n\n  render(){\n    if(this.state.refresh){\n      return <Redirect to=\"/testEventPage\" />\n    }else{\n      return (\n        <div>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control placeholder=\"Enter Name of Event\" onChange={this.handleNameChange}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Address</Form.Label>\n              <Form.Control placeholder=\"Enter Address\" onChange={this.handleAddressChange}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Latitude</Form.Label>\n              <Form.Control placeholder=\"Enter Latitude\" onChange={this.handleLatitudeChange}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Longitude</Form.Label>\n              <Form.Control placeholder=\"Enter Longitude\" onChange={this.handleLongitudeChange}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Control placeholder=\"Enter Description\" onChange={this.handleDescChange}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n      )\n    }\n  }\n}\n\nexport default withRouter(EventPage);\n"]},"metadata":{},"sourceType":"module"}